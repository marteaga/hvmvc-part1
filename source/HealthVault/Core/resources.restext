# Copyright(c) Microsoft Corporation.
# This content is subject to the Microsoft Reference Source License,
# see http://www.microsoft.com/resources/sharedsource/licensingbasics/sharedsourcelicenses.mspx.
# All other rights reserved.

# Used in many files
ListSeparator=, 
ListFormat=, {0}
GroupSeparator=;
GroupFormat=; {0} 
Range={0} - {1}
DateRange={0} to {1}
MeasurementRange={0} to {1}
Ellipsis=...
XSpace=X 

Sunday=Sunday
Monday=Monday
Tuesday=Tuesday
Wednesday=Wednesday
Thursday=Thursday
Friday=Friday
Saturday=Saturday

Male=male
Female=female

True=true
False=false

WhitespaceOnlyValue=The value cannot contain only white space.
StringNullOrEmpty=The string value cannot be null or the empty string.
StringNull=The string value cannot be null.
ArgumentNull=The argument value cannot be null.

GuidParameterEmpty=The parameter cannot be Guid.Empty.

ClassAlreadyMocked=The class already has a mock registered for it. Call RemoveMock() before making this call. 
ClassIsntMocked=The class does not have a mock registered for it. 

# AuthenticatedConnection.cs
LiveIdTicketNullOrEmpty=The Live ID ticket must be provided.
AuthenticatedConnectionLogonAppId=The application identifier cannot be Guid.Empty.
InvalidShellUrlConfiguration=To use this constructor, the shell URL must be specified in the web or application configuration file. 
InvalidHealthServiceUrlConfiguration=To use this constructor, the health service URL must be specified in the web or application configuration file.

# BlobStream.cs
BlobStreamPositionIsNegative=The position cannot be set before the start of the stream.
BlobStreamPositionPastEnd=The position cannot be set past the end of the stream.
BlobStreamSeekFromEndNullLength=Cannot seek from the end of the stream if the length of the stream is not known.
BlobStreamLengthNotSupported=The length of the stream is not known.

# CertificateName.cs
CertificateNameConversionFailed=Error {0} occurred at {1}.

# Credential.cs
AuthenticatedConnectionNull=A connection instance must be provided.
AuthenticationAppIDNullOrEmpty=A valid application identifier must be provided.
CreateTokenMethodNameIsNullOrEmpty=The method name cannot be null or empty.
AuthenticationAppIDCollectionNullOrEmpty=The collection of application identifiers cannot be null or empty.
SharedSecretMissing=The SharedSecret property should not be null for authenticated sessions.
DataArrayMustContainData=The data array cannot be null or empty.
IndexValueInvalid=The index must be greater than or equal to zero and less than the data length.
CountInvalid=The count must be greater than zero and less than the data length.

#ApplicationBinaryConfiguration.cs
ApplicationBinaryConfigurationPathRequired=The path to the binary configuration file must be specified.
ApplicationBinaryConfigurationContentTypeRequired=The binary configuration content type must be specified.
ApplicationBinaryConfigurationContentStreamRequired=The binary configuration content stream must be specified.

#ApplicationConnection.cs
GetAuthorizedPeopleSettingsBatchSizeNegative=The batch size must be a non-negative number.
GetAuthorizedPeopleSettingsNull=The settings parameter cannot be null.
GetAuthorizedPeopleNumResultsNegative=The number of results must be a non-negative number.

#ApplicationInfo.cs
ApplicationInfoNameRequired=The application name cannot be null or empty.
ApplicationInfoPublicKeysRequired=At least one application public key must be specified.
PersistentTokenTtlInSecondsNotPositive=Persistent token ttl in seconds must be greater than zero.

#Blob.cs
BlobFilenameMissing=The file name must be specified.

#BlobHasher.cs
BlobHashAlgorithmUnsupported=The BLOB hash algorithm {0} is not supported.
BlockSizeMustBePositive=The block size must be a positive value.
AlgorithmHashSizePartialByteLength=The algorithm hash size cannot be of partial byte length. The bit length is {0}.
CalculateBlockHashesOffsetNegative=The offset cannot be negative.
CalculateBlockHashesCountNegative=The count cannot be negative.
CalculateBlockHashesDataLengthTooSmall=The sum of the offset and count is greater than the buffer length.
CalculateBlobHashBlockHashCountMustBePositive=The block hash count must be greater than 0.

#BlobStream.cs
BlobStreamBufferLengthTooSmall=The sum of the offset and count is greater than the buffer length.
BlobStreamNoData=A blob was created but no data was written to it. 

#connectpackage.cs
ConnectPackageConnectionNull=The connection cannot be null.

#Package.cs
PackageCreateHRIMissingMandatory=The friendly name, security question and answer, application patient ID, and a list of HealthRecordItems must all be specified when creating a package.
PackageCreateHRIAnswerLength=The specified answer must be at least 6 characters long.
PackageCreatePPPMissingMandatory=The friendly name, security question, application patient ID, and a PasswordProtectedPackage must all be specified when creating a package.
PackageCreateInvalidPackageContents=At least one of the HealthRecordItems in the package's contents was null. Please ensure none of the HealthRecordItems in the package contents are null.
PackageCreateSignedWithStreamedBlobsNotSupported=Packages containing signed HealthRecordItems with streamed BLOBs is not supported.
PackageDeletePendingMissingMandatory=The application patient ID must be specified to remove a pending package.
PackageUpdateApplicationPatientIdMissingMandatory=The old application patient ID and the new application patient ID must be specified to update the package.

#PatientConnection.cs
PatientConnectionCreateMissingMandatory=The friendly name, security question and answer, and the application patient ID must all be specified when creating a patient connection.
PatientConnectionDeletePendingMissingMandatory=The application patient ID must be specified to remove a pending connection request.
PatientConnectionUpdateApplicationPatientIdMissingMandatory=The old application patient ID and the new application patient ID must be specified to update the connection request.

#Provisioner.cs
ProvisionerNullConnection=The specified connection cannot be null.
ProvisionerNullApplicationInfo=The specified application info cannot be null.
ProvisionerEmptyAppId=A valid application identifier must be specified.
ProvisionerUpdateAppConfigDataRequired=At least one property of the application configuration information must be set when doing an update.
AddApplicationNameMandatory=Add application requires the application name be specified.
AddApplicationPublicKeysMandatory=Add application requires the application public keys contain at least one public key.
AddApplicationOfflineBaseAuthorizationsMandatory=Add application requires at least one offline base authorization rule to be specified.
AddApplicationDescriptionMandatory=Add application requires the application description to be specified.
AddApplicationAuthorizationReasonMandatory=Add application requires the authorization reason to be specified.
AddApplicationLargeLogoMandatory=Add application requires the large logo to be specified.


#AppServerCredential.cs
WebApplicationCredentialAppIdEmpty=The application id cannot be empty.
WebApplicationCredentialSubCredentialNull=The sub-credential cannot be null.
WebApplicationCredentialInternalTimeout=The credential has timed out while attempting to authenticate.
WebApplicationCredentialCertSubjectNull=The certificate subject cannot be null.

#OfflineWebApplicationConnection.cs
CredentialMustBeSpecified=The credential property cannot be null.

#CryptoApiBlob.cs
CryptoApiBlobNotNullData=The argument data cannot be null.
CryptoApiBlobSizeGreaterThanZero=Size must be greater than zero
CryptoApiBlobUnableToAllocateBlob=Unable to allocate CryptoAPI blob

#AbstractCryptoServiceProviderHash.cs
CryptoHashNotInitialized=The hash is not initialized.

# CryptoConfig.cs
CryptoConfigNotHMACAlgorithmName=The provided algorithm name is not an HMAC algorithm.
CryptoConfigUnsupportedAlgorithmName=The specified algorithm name is not supported.
CryptoConfigInvalidKeyMaterial=The provided key material does not match the algorithm.
CryptoConfigEmptyKeyMaterial=The key material for HMAC may not be null or empty.
CryptoHmacAlreadyFinalized=The HMAC has already been finalized.
CryptoKeyMaterialNullOrEmpty=The specified key material cannot be null or empty.
CryptoKeyMaterialAllZeros=The specified key material cannot be all zeros.
CryptoAlgorithmNameNullOrEmpty=The algorithm name cannot be null or empty.
CryptoConfigOSNotSupported=The configured cryptography is not supported on this OS.

# CryptoHash.cs
CryptoHashAlreadyFinalized=The hash has already been finalized.

# ApplicationCertificate.cs
ApplicationCertificateUnableToAddCertToStore = Could not add certificate to store: {0}.
ApplicationCertificateUnableToCreateCert = Could not create self signed certificate: {0}.
ApplicationCertificateUnableToAcquireContext = Could not acquire cryptographic context: {0}.
ApplicationCertificateUnableToGenerateKey = Could not generate a key for the certificate: {0}.


# CertificateStore.cs
CertificateStoreArgumentNullOrEmpty = Argument cannot be null or empty.

# HealthClientApplication.cs
InvalidMasterApplicationIdConfiguration = The master application Id provided is an empty Guid.
InvalidCertificate = The certificate for the application is null.
InvalidClientName = The client name is empty or null.
InvalidPersonId = The person Id is empty.
InvalidApplicationCertificate = The certificate for the application is invalid or not found.

# HealthRecord.cs
UpdateItemsArgumentNull=A valid enumeration of non-null health record items must be provided.
UpdateItemNull=A valid health record item must be provided for update.
RemoveItemsListNullOrEmpty=A valid enumeration of health record items must be provided for removal.
RemoveItemNull=A valid health record item must be provided for removal.
RemoveItemGuidEmpty=A valid health record item identifier must be provided for removal.
CtorServiceArgumentNull=A valid connection instance must be provided.
CtorIDArgumentEmpty=The record ID cannot be Guid.Empty.
HealthRecordNotUpdated=The data for this property is not available until Refresh is called.
NewItemNullItem=The health record item must be specified when creating a new item.
NewItemsNullItem=A valid enumeration of non-null health record items mu	st be provided.
UpdateItemsWithNoId=An item cannot be updated without specifying it's unique identifier.
InvalidConnectionType=The information for the record '{0}' could not be refreshed because the Connection is not an AuthenticatedConnection.

# HealthRecordAccessor.cs 
CtorhealthRecordItemTypesArgumentNull=A non null list of health record item types must be provided.
CtorhealthRecordItemTypeIdsArgumentNull=A non null list of health record item type ids must be provided.

# HealthRecordInfo.cs
ConnectionIsNeitherAuthenticatedNorOffline=The information for the record '{0}' could not be refreshed because the connection is neither an authenticated connection nor a offline web connection.

# HealthRecordItem.cs
ThingIdInvalid=The health record item id cannot be Guid.Empty;
ThingVersionInvalid=The health record item version-stamp cannot be Guid.Empty.
ThingIdNotReturned=The response from the server did not include the unique identifier for the item.
ThingDeserializationFailed=The type specific item data could not be parsed.
ThingElementNameInvalid=The specified wrapper name cannot be null or empty.
OtherDataStreamingGetFailed=The streaming access of the other data over HTTP encountered an exception.
OtherDataPutStreamRecreationNotAllowed=The stream to send the other data over HTTP is not allowed to be recreated for a HealthRecordItem.
OtherDataSizeLimitExceeded=The other data item cannot be larger than the largest size allowed by the HealthVault platform.
# SignatureData.cs
SignatureMethodUnsupported=The health record item signature method {0} is not supported.
SignatureOnlyOneAllowed=A health record item may only have one signature.
SignatureNoSignature=The health record item does not contain a signature.
SignatureSigningFailed=Unable to sign the health record item. {0}
SignatureValidationFailed=Unable to validate the signature of the health record item. {0}
SignatureDeserializationFailed=The signature could not be parsed. {0}
SigningCertificateNull=The value of the signingCertificate property cannot be null.
ThingDocNull=The value of the thingDoc property cannot be null.
CertificateNoCertificate=The signature does not contain exactly one signature.
CertificateValidationFailed=Unable to validate the certificate. {0}
CertificateIssuer= Issuer name: {0}
CertificateExpireDate=, Certificate valid until: {0}
CertificateIsValid=, Certificate is valid: {0}
CertficateStatus=, Status: {0}

# HealthRecordItemChangedEventArgs.cs
ConnectionNull=The connection cannot be null.
HealthServiceUrlNull=The healthServiceUrl cannot be null.

# HealthRecordExporter.cs
HealthRecordExporterCtorArgumentNull=A valid HealthRecord is required to export items.
HealthRecordExporterCtorTransforTagRequired=A valid transform tag must be specified.

# HealthRecordSearcher.cs
HealthRecordSearcherCtorArgumentNull=A valid HealthRecord is required to search for items.
GetSingleThingTooManyResults=Expecting a single result but got more than one.
GetTransformedThingsNullOrEmpty=A transformUrl must be provided.
GetTransformedThingsUriNull=A transformUrl must be provided.

# HealthRecordFilter.cs
HealthRecordSearcherNoFilters=At least one valid filter must be present to search for items.
HealthRecordSearcherInvalidFilter=A filter must have at least one valid property, ItemId or ItemKey present to search for items.
HealthRecordSearcherInvalidFilterIdsAndKeysSpecified=A filter may only specify either ItemIds or ItemKeys or ClientItemIds, but not more than one of the three at the same time.
HealthRecordFilterNameNull=The filter name cannot be set to null or empty.
HealthRecordFilterMaxReturnsNegative=The maximum number of items returned must not be negative.
HealthRecordFilterMaxFullItemsReturnedNegative=The maximum number of full items returned per request must not be negative.
HealthRecordFilterViewNull=The view cannot be null.

# HealthRecordItemCollection.cs
ResponseRecordNUll=A record must be provided for all responses.
ResultGroupIsReadOnly=The result group is read-only. The collection cannot be modified.
ResultGroupNotCopyable=The result group cannot be copied as that may cause unexpected network access.
ResultGroupIndexOutOfRange=The index is less than zero or greater than the size of the collection.
ResultGroupRangeIndexesOutOfRange=The minimum and maximum indexes must be greater than or equal to zero and less than the size of the collection.
ResultGroupRangeMinGreaterThanMax=The minimum index must be less than or equal to the maximum index.    

# HealthRecordView.cs
NoSectionsOrTransforms=At least one section or one transform must be specified for the view.

# HealthRecordItemRelationship.cs
RelationshipItemIDNotSpecified=The health record item identifier must be specified.
RelationshipItemKeyNotSpecified=A health record item key must be specified.
RelationshipClientIdNotSpecified=A non null and non empty string must be specified for the client id.
RelationshipItemKeyOrClientIdNotSpecified=A health record item key or a client id must be specified.

# HealthServiceConnection.cs
InvalidApplicationIdConfiguration=To use this constructor, the application ID must be specified in the web or application configuration file.
InvalidRequestUrlConfiguration=To use this constructor, the HealthServiceUrl must be specified in the web or application configuration file.

# ThingDataTable.cs
DataTableFilterNull=A search filter must be provided.
DataTableViewInvalid=The single type table view can only be used when a single type is being requested through the filter.

# WildcatClientRequest.cs
CtorServiceNull=The connection instance must be provided.
CtorMethodNameNullOrEmpty=The method name must be provided.
CtorAuthTokenNullOrEmpty=The authentication token must be provided.
ServiceIsNotPersonSpecific=The connection instance contains an authentication token and cannot be used to construct the request with this constructor. Try using one of the other constructors.
CtorInvalidAppId=A valid application identifier must be provided.
TimeoutMustBePositive=The timeout must be greater than or equal to zero.

# HealthVaultService.cs
CtorServiceUrlNull=The HealthVault service URL must be provided.
CtorAuthUrlNullOrEmpty=The HealthVault authentication URL must be provided.
CtorUsernameNullOrEmpty=The userName must be provided.
CreateRequestNullRecord=A record must be provided when creating a request with this method.
CreateRequestMethodNameNullOrEmpty=A method name must be provided to create the request.
CertificateNotFound=The specified certificate, {0}, could not be found in the {1} certificate store,or the certificate does not have a private key.
ImpersonateEmptyGuid=The target person unique identifier cannot be Guid.Empty.
CtorOfflinePersonIdEmpty=The offline person ID must be provided.
ConnectionNotAuthenticated=The user must be authenticated to the Health Service in order to have an authentication token.

# OpenQuery.cs
UrlSetRequiresValue=The URL value must be provided.
UrlDoesNotContainQueryId=The URL value must contain an open query ID.
QueryIdInvalid=The open query identifier must be a non-empty Guid.
NewQueryNullService=A valid connection must be provided.
NewQueryNullSearcher=A valid HealthRecordSearcher must be provided.
NewQuerySearcherNoFilters=The specified query does not contain any valid search filters.
NewOpenQueryResponseBadFormat=The response from saving the query was in an unexpected format. The query-id element could not be found.
PincodeNullOrEmpty=The pin code cannot be null or empty.
PinCodeRequired=A pin code is required for this open query.

# SDKExceptions.cs
RecordNotFoundException=The information for the record '{0}' could not be found.
ExceptionSerializationInfoNull=The serialization information must be provided.
InvalidResponseFromXMLRequest=The response format was not valid XML. This may happen if the HealthServiceUrl used to connect to HealthVault is misconfigured.
HealthServiceExceptionNoResponseError=An unexpected error code was returned from HealthVault. {0}
RecordAuthorizationRequired=The specified user account has not authorized this application to a health record.
RecordAuthorizationNotPossible=The specified user account does not have access to a health record that meets the minimum authorization requirements of the application.
RecordReauthorizationRequired=The specified user account had authorized the application to a health record, but that authorization no longer meets the minimum requirements of the application or the application's minimum authorization requirements have changed. The user must reauthorize the application to the health record.
RequestCancelled=The HealthVault request was cancelled.

# PersonInfo.cs
SelfRecordNotFound=The person has no records that are authorized with the "self" relationship.
PersonInfoConnectionNull=The connection must be specified.
XmlNullReader=The XML reader must be specified.

# ApplicationConfiguration.cs
InvalidRequestCompressionMethod=Invalid requestCompressionMethod specified.
InvalidResponseCompressionMethods=Invalid responseCompressionMethods specified.
UnsupportedCryptoAlgorithm=The specified algorithm is not supported.
SignatureCertStoreLocationMissing=The signature certificate store location is not specified.
CertificateFileNotFound=The certificate file specified by ApplicationCertificateFileName was not found.
CertificateMissingPrivateKey=The certificate does not contain a private key.
ErrorLoadingCertificateFile=Error loading certificate. Is password specified using ApplicationCertificatePassword?
InvalidSupportedTypeVersions=Invalid supportedTypeVersions specified.

# MailRecipient.cs
EmailAddressNullOrEmpty=An email address for the recipient must be provided.
DisplayNameNullOrEmpty=A display name for the recipient must be provided.

# MailMessage.cs
SendInsecureMessageNoMessage=The message text, html, or both must be provided.
SendInsecureMessageNoSubject=The message subject must be provided.
SendInsecureMessageNoRecipient=At least one recipient must be provided.
SendInsecureMessageEmptyRecordId=The record ID cannot be empty.
SendInsecureMessageNoMailboxName=The mailbox name must be provided.
SendInsecureMessageNoSenderDisplayName=The sender display name must be provided.

# SDKHelper.cs
NonUTCDateTime=A non UTC DateTime has been provided when a UTC DateTime is expected.

# EasyWebRequest.cs
TimeoutConstructingRequest=The request timed out while constructing the request XML.
TimeoutSendingRequest=The request timed out while sending the request XML ({0} bytes).
TimeoutReceivingResponse=The request timed out while waiting for the response.
TimeoutProcessingResponse=The request timed out while processing the XML response ({0} bytes).

# ThingTypeManager.cs
ThingTypeClassNull=The type that implements the item type specific data must be specified.
ThingTypeClassNotHealthRecordItem=The itemTypeClass must derive from HealthRecordItem.
TypeHandlerAlreadyRegistered=An item type handler is already registered for the specified type ID.
ExtensionSourceNullOrEmpty=The extension source must be specified.
ItemExtensionClassNull=The type that implements the item extension data must be specified.
ThingExtensionClassNotThingExtension=The itemExtensionClass must derive from HealthRecordItemExtension.
ExtensionHandlerAlreadyRegistered=A item extension handler is already registered for the specified extension source.
TypeIdEmpty=A valid item type must be specified.
TypeManagerConnectionNull=A connection must be specified.
TypeIdGuidEmpty=The type identifier must be a non-empty Guid.
ApplicationIdGuidEmpty=The application identifier must be specified.
SubtypeTagMandatory=The subtype tag must be specified.
AppDataHandlerClassMandatory=The application specific data handler class must be specified.
AppDataHandlerNotApplicationSpecific=The type that implements the application specific data handler must derive from ApplicationSpecific.
AppDataHandlerAlreadyRegistered=An application specific data handler is already registered for the specified application ID and subtype tag.

# ThingTypeDefinition.cs
TransformNameNotFound=A transform with the name '{0}' could not be found for this type.

################################################################
# Thing types
################################################################


# Address.cs
AddressCityMandatory=The value of the City property cannot be null.
AddressCityNotSet=The city must be set before creating or updating the item.
AddressCountryMandatory=The value of the Country property cannot be null.
AddressCountryNotSet=The country must be set before creating or updating the item.
AddressPostalCodeMandatory=The value of the PostalCode property cannot be null.
AddressPostalCodeNotSet=The postal code must be set before creating or updating the item.
AddressStreetNotSet=The street must contain at least one value before creating or updating the item.
AddressStreetMandatory=The value of the Street property cannot be null and must contain at least one value.
IsPrimary=(Primary)
AddressFormat={0}{1}{2}, {3}, {4}, 
AddressFormatWithCountryOrDescription={0}{1}{2}, {3}, {4}, {5}, 
AddressFormatWithCountryAndDescription={0}{1}{2}, {3}, {4}, {5}, {6}, 

# AerobicData.cs
AerobicDataToStringFormatDistanceAndDuration={0}, {1} minute(s)
AerobicDataToStringFormatDuration={0} minute(s)
AerobicDataToStringFormatDistance={0}

# AerobicProfile.cs
AerobicProfileMaxHRFormat={0}max 
AerobicProfileRestingHRFormat={0}resting 
AerobicProfileAnaerobicThresholdFormat={0}AT 
AerobicProfileRelativeVO2MaxFormat={0} VO2max 


# AerobicSession.cs
AerobicSessionMandatory=The value of the Session property cannot be null.
AerobicSessionUnexpectedNode=The specific XML does not contain an aerobic-session node.
AerobicSessionDurationNotPositive=The duration must be greater than zero.
AerobicSessionPeakHrNotPositive=The peak heart rate must be greater than zero.
AerobicSessionAvgHrNotPositive=The average heart rate must be greater than zero.
AerobicSessionMinHrNotPositive=The minimum heart rate must be greater than zero.
AerobicSessionEnergyNotPositive=The energy consumed must be greater than zero.
AerobicSessionEnergyFromFatNotPositive=The energy from fat consumed must be greater than zero.
AerobicSessionPeakSpeedNotPositive=The peak speed must be greater than zero.
AerobicSessionAvgSpeedNotPositive=The average speed must be greater than zero.
AerobicSessionMinSpeedNotPositive=The minimum speed must be greater than zero.
AerobicSessionPeakPaceNotPositive=The peak pace must be greater than zero.
AerobicSessionAvgPaceNotPositive=The average pace must be greater than zero.
AerobicSessionMinPaceNotPositive=The minimum pace must be greater than zero.
AerobicSessionPeakPowerNotPositive=The peak power must be greater than zero.
AerobicSessionAvgPowerNotPositive=The average power must be greater than zero.
AerobicSessionMinPowerNotPositive=The minimum power must be greater than zero.
AerobicSessionLeftRightBalanceNotPercentage=The left-right balance must be between zero and one inclusive.
AerobicSessionPeakCadenceNotPositive=The peak cadence must be greater than zero.
AerobicSessionAvgCadenceNotPositive=The average cadence must be greater than zero.
AerobicSessionMinCadenceNotPositive=The minimum cadence must be greater than zero.
AerobicSessionPeakTemperatureNotPositive=The peak temperature must be greater than zero.
AerobicSessionAvgTemperatureNotPositive=The average temperature must be greater than zero.
AerobicSessionMinTemperatureNotPositive=The minimum temperature must be greater than zero.
AerobicSessionAirPressureNotPositive=The air pressure must be greater than zero.

# AerobicWeekly.cs
AerobicWeeklyUnexpectedNode=The specific XML does not contain an aerobic-weekly node.
AerobicWeeklySessionNull=The AerobicSession is mandatory and cannot be set to null.
AerobicWeeklySessionNotSet=The aerobic session must be set before creating or updating the item.
AerobicWeeklyRecurrenceNotPositive=The recurrence must be greater than zero.
AerobicWeeklyGoalToStringFormat={0}, {1} time(s) per week

# AerobicProfile.cs
AerobicProfileUnexpectedNode=The specific XML does not contain an aerobic-profile node.

# Alert.cs
AlertDaysNotSet=The alert days must be set before creating or updating the item.
AlertTimesNotSet=The alert times must be set before creating or updating the item.
AlertDOWNull=The alert days cannot be null or empty.
AlertTimesNull=The alert times cannot be null or empty.
AlertTimeFormat=@ {0}
AlertToStringFormat={0} {1}

# AllergicEpisode.cs
AllergicEpisodeUnexpectedNode=The specified XML does not contain an allergic-episode node.

# Allergy.cs
AllergyNameMandatory=An allergy item must always have a name.
AllergyUnexpectedNode=The specified XML does not contain an allergy node.

# AltitudeMeasurement.cs
AltitudeNotPositive=The altitude value must be greater than zero.

# Annotation.cs
AnnotationUnexpectedNode=The specified XML does not contain an annotation node.
AnnotationWhenNotSet=The date when the annotation was taken must be set before creating or updating the item.
AnnotationAuthorFormat=Author: {0}
AnnotationDateFormat=Date: {0}

# ApplicationSpecific.cs
AppSpecificUnexpectedNode=The specified XML does not contain an app-specific node.
AppSpecificAppIdMandatory=The application identifier must be set before creating or updating the item.
AppSpecificAppIdEmpty=The ApplicationId is mandatory and cannot be set to null or empty.
AppSpecificTagMandatory=The subtype tag must be set before creating or updating the item.
AppSpecificTagEmpty=The SubtypeTag is mandatory and cannot be set to null or empty.
AppSpecificDescriptionMandatory=The description must be set before creating or updating the item.
AppSpecificDescriptionEmpty=The Description is mandatory and cannot be set to null or empty.

# Appointment.cs
AppointmentUnexpectedNode=The specified XML does not contain an appointment node.

# ApproximateDateTime.cs
ApproximateDateTimeMissingMandatory=Either the ApproximateDate or the Description must be specified.
ApproximateDateTimeDateNull=The approximate date cannot be null.
ApproximateDateTimeDescriptionNullOrEmpty=The description cannot be null or empty;

# AsthmaInhaler.cs
AsthmaInhalerUnexpectedNode=The specific XML does not contain an asthma-inhaler node.
AsthmaInhalerStartDateNotSet=The inhaler start date must be set before creating or updating the item.
AsthmaInhalerStartDateMandatory=The StartDate is mandatory and cannot be set to null.

# AsthmaInhalerUse.cs
AsthmaInhalerUseUnexpectedNode=The specific XML does not contain an asthma-inhaler-use node.
AsthmaInhalerUseWhenNotSet=The date when the use occurred must be set before creating or updating the item.
AsthmaInhalerDrugNotSet=The drug being inhaled must be set before creating or updating the item.
AsthmaInhalerDoseCountNotSet=The dosage count must be set before creating or updating the item.
AsthmaInhalerUseDrugMandatory=The Drug property is mandatory and cannot be set to null or empty.
AsthmaInhalerUseToStringFormatWithDrug={0}, {1} dose(s)
AsthmaInhalerUseToStringFormat={0} dose(s)

# Basic.cs
BasicUnexpectedNode=The specified XML does not contain a basic node.
BasicBirthYearOutOfRange=The birth year must be between 1000 and 3000.
BasicPostalCodeMandatory=The postal code cannot be null or empty;
BasicCityMandatory=The city cannot be null or empty.
BasicCountryMandatory=The country cannot be null or empty.
BasicTimeZoneOutOfRange=The time zone must be between -960 and 960 minutes of offset from UTC.
BasicToStringFormatGenderAndBirthYear={0}; Born {1}
BasicToStringFormatBirthYear=Born {0}
BasicToStringFormatPostalCodeAndCountry={0}, {1}
BasicToStringSeeDetails=See Details

# BloodGlucose.cs 
BGUnexpectedNode=The specified XML does not contain a blood-glucose node.
BGValueMandatory=The value of the Value property cannot be null.
BGValueNotSet=The blood glucose value must be set before creating or updating the blood glucose item.
BGMeasurementTypeMandatory=The value of the GlucoseMeasurementType property cannot be null.
BGMeasurementTypeNotSet=The blood glucose measurement type must be set before creating or updating the blood glucose item.
BloodGlucoseNotPositive=The blood glucose value must be greater than zero.

# BloodPressure.cs
BPUnexpectedNode=The specified XML does not contain a blood-pressure node.
BPSystolicNegative=The systolic pressure must not be negative.
BPSystolicNotSet=The systolic pressure must be set before creating or updating the blood pressure item.
BPDiastolicNegative=The diastolic pressure must not be negative.
BPDiastolicNotSet=The diastolic pressure must be set before creating or updating the blood pressure item.
BPPulseNegative=The pulse must not be negative.
BPToStringFormat=Systolic {0}, Diastolic {1}

# CardiacProfile.cs
CardiacProfileUnexpectedNode=The specific XML does not contain a cardiac-profile node.
CardiacProfileToStringFormatHasPersonalStrokeHistory=Has personal stroke history = {0}
CardiacProfileToStringFormatHasPersonalHeartDiseaseHistory=Has personal heart disease history = {0}
CardiacProfileToStringFormatHasFamlyStrokeHistory=Has family stroke history = {0}
CardiacProfileToStringFormatHasFamlyHeartDiseaseHistory=Has family heart disease history = {0}
CardiacProfileToStringFormatDiabetesDiagnosed=Diabetes diagnosed = {0}
CardiacProfileToStringFormatRenalFailureDiagnosed=Renal failure diagnosed = {0}
CardiacProfileToStringFormatOnHypertensionMeds=On hypertension medication = {0}
CardiacProfileToStringFormatOnHypertensionDiet=On hypertension diet = {0}

# CholesterolProfile.cs
CholesterolProfileUnexpectedNode=The specific XML does not contain a cholesterol-profile node.
CholesterolProfileToStringFormatTotal={0} mg/dL
CholesterolProfileToStringFormatLDLAndHDL={0}/{1} (LDL/HDL in mg/dL)
CholesterolProfileToStringFormatLDL={0} (LDL in mg/dL)
CholesterolProfileToStringFormatHDL={0} (HDL in mg/dL)
CholesterolProfileToStringFormatTriglyceride={0} (triglyceride in mg/dL)

# CommonSubscriptionData.cs
NotificationChannelNull=The value of the NotificationChannel property cannot be null.
SharedKeyInfoNull=The value of the SharedKeyInfo property cannot be null.
MissingCommonNode=Cannot find common node.
EmptyGuid=The subscription id cannot be equal to Guid.Empty.

# CommonNotificationData.cs
MissingSubscriptionIdNode=Cannot find subscription-id node.

# Contact.cs
ContactInformationUnexpectedNode=The specified XML does not contain a contact node.
ContactInformationMandatory=The value of the ContactInformation property cannot be null.
ContactInformationNotSet=The contact information must be set before creating or updating the contact item.
ContactInformationToStringSeeDetails=See Details

# ContactInfo.cs
ContactInfoFormatPrimary={0} (Primary)
ContactInfoFormatAddress={0}, {1}

# CodableValue.cs
CodableValueNullText=The value of the Text property cannot be null or empty.

# CodedValue.cs
ValueNotSet=The code value must be set before creating or updating the item.
NameNotSet=The code name must be set before creating or updating the item.
CodedValueMandatory=The value of the Value property cannot be null.
NameMandatory=The value of the Name property cannot be null.
VocabularyKeyMandatory=The value of the Vocabulary key cannot be null.

# Condition.cs
ConditionUnexpectedNode=The specified XML does not contain a condition node.
ConditionNameMandatory=A condition item must always have a name.
ConditionNameNotSet=The condition name must be set before creating or updating the item.

# Device.cs
DeviceUnexpectedNode=The specified XML does not contain an device node.
DeviceWhenNotSet=The date when the device was used must be set before creating or updating the item.

# DiabeticProfile.cs
DiabeticProfileUnexpectedNode=The specific XML does not contain a diabetic-profile node.
DiabeticProfileMaxHbA1CRange=The maximum HbA1C must be between 0.0 and 1.0, inclusive.
DiabeticProfileToStringFormatPercent={0}%

# DietaryDailyIntake.cs
DietaryDailyIntakeUnexpectedNode=The specified XML does not contain a dietary-intake-daily node.
DietaryDailyIntakeToStringFormatCalories={0} kCal
DietaryDailyIntakeToStringFormatTotalFat=fat:{0}{1}
DietaryDailyIntakeToStringFormatProtein=protein:{0}{1}
DietaryDailyIntakeToStringFormatTotalCarbs=carbs:{0}{1}
DietaryDailyIntakeToStringUnitGrams=g

# DailyMedicationUsage.cs
DailyMedicationUsageUnexpectedNode=The specified XML does not contain a daily-medication-usage node.
DailyMedicationUsageDrugNameNull=The drug name must always have a value.
DailyMedicationUsageDrugNameNotSet=The drug name must be set before creating or updating the item.
DailyMedUsageToStringFormatDrug=Drug: {0}
DailyMedUsageToStringFormatPurpose=, Purpose: {0}
DailyMedUsageToStringFormatDosesWithIntended=, Doses (taken/intended): {0}/{1}
DailyMedUsageToStringFormatDosesWithIntendedUnknown=, Doses (taken/intended): {0}/?
DailyMedUsageToStringFormatSingleDoseDescription=, Description: {0}

# Directive.cs
DirectiveUnexpectedNode=The specified XML does not contain a directive node.
DirectiveStartDateMandatory=A directive item must always have a start date.
DirectiveStartDateNotSet=The directive start date must be set before creating or updating the item.
DirectiveStopDateMandatory=A directive item must always have a stop date.
DirectiveStopDateNotSet=The directive stop date must be set before creating or updating the item.

# DischargeSummary.cs
DischargeSummaryUnexpectedNode=The specified XML does not contain an discharge-summary node.
DischargeSummaryWhenNotSet=The date when the discharge summary was made must be set before creating or updating the item.

# DisplayValue.cs
DisplayValueToStringFormatWithUnits={0} {1}
DisplayValueUnitsMandatory=The value of the Units property cannot be null.

# DoseValue.cs
DoseValueMustBePositive=The dose value must be greater than zero.
DoseValueToStringDoseMinAndMax={0}-{1}
DoseValueToStringDoseMin={0}-?
DoseValueToStringDoseMax=?-{0}
DoseValueTOStringDoseNeither=?-?

# DurationValue.cs
DurationValueStartDateNotSet=The duration start date must be set before creating or updating the item.
DurationValueStartDateMandatory=A duration value must always have a start date.

# Email.cs
EmailAddressMandatory=The value of the Address property cannot be null.
EmailAddressNotSet=The e-mail address must be set before creating or updating the item.

# Emotion.cs
EmotionUnexpectedNode=The specified XML does not contain an emotion node.
EmotionToStringFormatMood=Mood {0}/5
EmotionToStringFormatStress=, Stress {0}/5
EmotionToStringFormatWellbeing=, Well Being {0}/5

# Encounter.cs
EncounterUnexpectedNode=The specified XML does not contain an encounter node.
EncounterWhenNotSet=The date when the encounter occurred must be set before creating or updating the item.

# FamilyHistory.cs
FamilyHistoryUnexpectedNode=The specified XML does not contain a family-history node.
FamilyHistoryConditionNotSet=The condition for the family history must be set before creating or updating the item.
FamilyHistoryConditionMandatory=A family history must always have a condition.
FamilyHistoryAgeOfOnsetNegative=The age of onset of a condition must be greater than or equal to zero.
FamilyHistoryAgeOfResolutionNegative=The age of resolution of a condition must be greater than or equal to zero.
FamilyHistoryToStringFormatAgeOfOnset=, at {0} year(s) old
FamilyHistoryToStringFormatAgeOfResolution=, resolved at {0} year(s) old


# File.cs
FileUnexpectedNode=The specified XML does not contain a file node.
FileSizeNotPositive=The file size must be greater than zero.
FileNameMandatory=The value of the Name property cannot be null or empty.
FileSizeNotSet=The file size must be set before creating or updating the item.
FileNameNotSet=The name must be set before creating or updating the item.
FilePathMustBeSpecified=The file path must be specified to set the content of the file item.
FileContentTypeMustBeSpecified=The file contenty type must be specified to set the content of the file item.
FileStreamMustBeSpecified=The stream must be specified to set the content of the file item.
FileStreamNameMustBeSpecified=The file name must be specified to set the content of the file item.
FileRecordMustBeSpecified=The record must be specified to set the content of the file item using a stream.

# FlowMeasurement.cs
FlowNotPositive=The flow measurement must be greater than zero.

# HbA1C.cs
HbA1CUnexpectedNode=The specified XML does not contain a HbA1C node.
HbA1CValueRange=The value must be a percentage between 0.0 and 1.0.
HbA1CToStringFormatPercent={0}%

# HeartRateZone.cs
HeartRateZoneNoLowerBoundary=The lower boundary for the heart rate zone must be defined before creating or updating the item.
HeartRateZoneNoUpperBoundary=The upper boundary for the heart rate zone must be defined before creating or updating the item.

# HeartRateZoneGroup.cs
HeartRateZoneGroupNoZones=At least one target heart rate zone must be defined before creating or updating the item.

# Height.cs
HeightUnexpectedNode=The specified XML does not contain a height node.
HeightValueMandatory=The value of the Value property cannot be null.
HeightValueNotSet=The height value must be set before creating or updating the height item.

# HealthcareProxy.cs
HealthcareProxyUnexpectedNode=The specified XML does not contain an healthcare-proxy node.
HealthcareProxyWhenNotSet=The date when the healthcare proxy occurred must be set before creating or updating the item.

# HttpNotificationChannel.cs
MissingHttpNotificationChannelNode=Missing http-notification-channel node
UrlNull=Url must have a value.

# Immunization.cs
ImmunizationUnexpectedNode=The specified XML does not contain an immunization node.
ImmunizationNameMandatory=The value of the Name property cannot be null.
ImmunizationNameNotSet=The immunization name must be set before creating or updating the item.
ImmunizationDateAdministratedNotSet=The immunization administrated date must be set before creating or updating the item.
ImmunizationDateAdministratedMandatory=The value of the DateAdministrated property cannot be null.
ImmunizationToStringFormat={0} ({1})

# InsulinInjection.cs
InsulinInjectionTypeMandatory=The insulin injection type cannot be null.
InsulinInjectionTypeNotSet=The insulin type must be set before creating or updating the item.
InsulinInjectionAmountNotSet=The insulin amount must be set before creating or updating the item.
InsulinInjectionAmountMandatory=The insulin amount cannot be null.
InsulinInjectionUnexpectedNode=The specified XML does not contain an insulin-injection node.
InsulinInjectionToStringFormat={0} {1}

# InsulinInjectionMeasurement.cs
InsulinInjectionNotPositive=The insulin injection value must be greater than zero.

# InsulinInjectionUse.cs
InsulinInjectionUseUnexpectedNode=The specified XML does not contain an diabetes-insulin-injection-use node.
InsulinInjectionWhenNotSet=The date when the use occurred must be set before creating or updating the item.

# LabGroupType.cs
LabGroupTypeNameMandatory=The value of the Name property cannot be null or empty.
LabGroupTypeNameNotSet=The group name must be set before creating or updating the item.

# LabResult.cs
LabResultsUnexpectedNode=The specified XML does not contain a lab-results node.
LabResultsWhenNotSet=The time when the lab results occurred must be set before creating or updating the item.
LabResultsGroupAndTestNotSet=Either the lab group or lab tests must be set before creating or update the item.
LabResultsGroupAndTestBothSet=Only the lab group or the lab tests may be set before creating or update the item, but not both.

# LabResultType.cs
LabResultTypeToStringFormatValueAndUnit={0} {1}


# LapSession.cs
LapSessionSecondsIntoSessionNonNegative=The seconds into the session must be greater than or equal to zero.

# LifeGoal.cs
LifeGoalUnexpectedNode=The specified XML does not contain a life-goal node.
LifeGoalDescriptionMandatory=The value of the Description property cannot be null.
LifeGoalDescriptionNotSet=The life goal description must be set before creating or updating the item.
LifeGoalToStringFormat={0} by {1}

# Length.cs
LengthNotPositive=The length value must be greater than zero.
LengthToStringFormatMeters={0} m

# Link.cs
LinkUnexpectedNode=The specified XML does not contain a link node.
LinkUrlNotSet=The URL must be set before creating or updating the item.
LinkUrlMandatory=The value of the Url property cannot be null.

# Measurement.cs
ValueNotPositive=The value must be greater than zero.

# Medication.cs
MedicationUnexpectedNode=The specified XML does not contain a medication node.
MedicationToStringFormatValueUnit={0} {1}

# MicrobiologyLabResult.cs
MicrobiologyLabResultsUnexpectedNode=The specified XML does not contain a microbiology-lab-results node.
MicrobiologyLabResultsWhenNotSet=The time when the lab results occurred must be set before creating or updating the item.

# Name.cs
FullNotSet=The full name must be set before creating or updating the item.
FullMandatory=The value of the Full property cannot be null or empty.
NameToStringFormat={0} {1} {2} {3} {4}, {5}

# Notification.cs
UnrecognizedNotificationChannelType=Unrecognized notification channel type: {0}.

# NotificationHandler.cs
MissingNotificationsNode=The specified XML does not contain a notifications node.

# Occurrence.cs
OccurrenceWhenNotSet=The time when of occurrence must be set before creating or updating the item.
OccurrenceMinutesNotSet=The duration in minutes of the occurrence must be set before creating or updating the item.
OccurrenceWhenMandatory=The value of the When property cannot be null.
OccurrenceMinutesMustBePositive=The value of the Minutes property must be greater than zero.

# PaceMeasurement.cs
PaceNotPositive=The pace value must be greater than zero.

# Payer.cs
PayerUnexpectedNode=The specified XML does not contain a payer node.
PayerPlanNameMandatory=The value of the PlanName property cannot be null.
PayerPlanNameNotSet=The plan name must be set before creating or updating the payer item.
PayerToStringFormat={0} {1}

# PasswordProtectedPackage.cs
PackageUnexpectedNode=The specified XML does not contain a password-protected-package node.
PackageKeyLengthOutOfRange=The KeyLength must be greater than zero and should match the length for the specified algorithm.
PackageHashIterationOutOfRange=The HashIterations must be greater than zero.
PackageSaltMandatory=The value of the Salt property cannot be null or empty.
PackageAlgorithmNotSet=The algorithm must be set before creating or updating the password protected package.
PackageSaltNotSet=The salt must be set before creating or updating the password protected package.
PackageKeyLengthNotSet=The key length must be set before creating or updating the password protected package.

# Person.cs
PersonUnexpectedNode=The specified XML does not contain a person node.
PersonNameMandatory=The value of the Name property cannot be null.
PersonNameNotSet=The person's name must be set before creating or updating the contact item.
PersonTypeMandatory=The value of the PersonType property cannot be null.
PersonTypeNotSet=The person type must be set before creating or updating the contact item.
PersonToStringFormat={0} ({1})

# Personal.cs
PersonalUnexpectedNode=The specified XML does not contain a personal node.
PersonalToStringFormatBirthDateAndEthnicity={0}; {1}
PersonalToStringFormatSeeDetails=See Details

# PersonalImage.cs
ImageStreamNull=The image stream must be specified.
ImageStreamToLarge=The image must be less than 2GB in size.

# Phone.cs
PhoneNumberMandatory=The value of the Number property cannot be null.
PhoneNumberNotSet=The telephone number must be set before creating or updating the item.

# PowerMeasurement.cs
PowerNotPositive=The power value must be greater than or equal to zero.

# Problem.cs
ProblemUnexpectedNode=The specified XML does not contain a problem node.
ProblemWhenNotSet=The time when the problem occurred must be set before creating or updating the item.
ProblemImportanceOutOfRange=The Problem importance must be between 1 and 5 inclusive.

# Procedure.cs
ProcedureUnexpectedNode=The specified XML does not contain a procedure node.
ProcedureWhenNotSet=The time when the procedure occurred must be set before creating or updating the item.

# RadiologyLabResult.cs
RadiologyLabResultsUnexpectedNode=The specified XML does not contain a radiology-lab-results node.
RadiologyLabResultsWhenNotSet=The time when the lab results occurred must be set before creating or updating the item.

# RespiratoryProfile.cs
RespiratoryProfileUnexpectedNode=The specific XML does not contain a respiratory-profile node.
RespiratoryProfileToStringEFRedZoneUpper=Red: 0 - {0}
RespiratoryProfileToStringEFOrangeZone=Orange: {0} - {1}
RespiratoryProfileToStringEFOrangeZoneUpper=Orange: ? - {0}
RespiratoryProfileToStringEFYellowZone=Yellow: {0} - {1}
RespiratoryProfileToStringEFYellowZoneUpper=Yellow: ? - {0}


# Sample.cs
SampleTimeOffsetNegative=The sample time offset must be greater than or equal to zero.
ValueIsMandatory=The sample value is mandatory and cannot be null.

# SampleSet.cs
SampleSetBaseTimeMandatory=The sample set base time must be specified.
SampleSetBaseTimeNotSpecified=The sample set base time must be set before creating or updating the item.

# SleepJournalAM.cs
SleepJournalAMUnexpectedNode=The specified XML does not contain a sleep-am node.
SleepJournalAMWhenMandatory=The value of the When property cannot be null.
SleepJournalAMWhenNotSet=When the sleep occurred must be set before creating or updating the item.
SleepJournalAMBedTimeMandatory=The value of the Bedtime property cannot be null.
SleepJournalAMBedTimeNotSet=The bed time must be set before creating or updating the item.
SleepJournalAMWakeTimeMandatory=The value of the WakeTime property cannot be null.
SleepJournalAMWakeTimeNotSet=The wake time must be set before creating or updating the item.
SleepJournalAMWakeStateNotSet=The wake state must be set before creating or updating the item.
SleepJournalAMSleepMinutesNotPositive=The value of the SleepMinutes property must be greater than zero.
SleepJournalAMSleepMinutesNotSet=The minutes spent sleeping must be set before creating or updating the item.
SleepJournalAMSettlingMinutesMandatory=The value of the SettlingMinutes property must be greater than zero.
SleepJournalAMSettlingMinutesNotSet=The minutes spent settling must be set before creating or updating the item.
SleepJournalAmToStringFormat={0}, {1}minutes

# SleepJournalPM.cs
SleepJournalPMUnexpectedNode=The specified XML does not contain a sleep-pm node.
SleepJournalPMWhenMandatory=The value of the When property cannot be null.
SleepJournalPMWhenNotSet=When the sleep occurred must be set before creating or updating the item.
SleepJournalPMSleepinessNotSet=The sleepiness must be set before creating or updating the item.

# SpeedMeasurement.cs
SpeedNotPositive=The speed measurement must be greater than zero.

# Spirometer.cs
SpirometerUnexpectedNode=The specified XML does not contain an spirometer node.
SpirometerWhenNotSet=The date when the spirometer reading occurred must be set before creating or updating the item.

# RecordItemChangedFilter.cs
MissingFiltersNode=Missing filters node.
MissingFilterNode=Missing filter node.

# subscription.cs
UnrecognizedSubscriptionType=Unrecognized subscription type: {0}.
CommonItemSubscriptionDataRequired=CommonItemSubscriptionData is required.
MissingRecordItemChangedNode=Missing record-item-changed-event node.
MissingSubscriptionNode=Missing subscription node.

# SubscriptionManager.cs
SubscriptionNull=The subscription cannot be null.
SubscriptionCommonSubscriptionDataNull=The CommonSubscriptionData property in the subscription cannot be null.
SubscriptionConnectionNull=The subscription connection cannot be null.
SubscriptionAlreadyCreated=The subscription id is not null.
SubscriptionIdNull=The subscription Id is required for this operation.

# TargetGlucoseZone.cs
GlucoseZoneRelativeBoundaryRange=The relative zone boundary must be between 0.0 and 1.0, inclusive.
GlucoseZoneNoLowerBoundary=The lower boundary for the glucose zone must be defined before creating or updating the item.
GlucoseZoneNoUpperBoundary=The upper boundary for the glucose zone must be defined before creating or updating the item.

# TemperatureMeasurement.cs
TemperatureNotPositive=The temperature value must be greater than zero.

# TorqueMeasurement.cs
TorqueNotPositive=The torque value must be greater than or equal to zero.

# VitalSignResultType.cs
VitalSignResultTitleNotSet=The title of the vital sign result must be set before creating or updating the item.
VitalSignResultTitleMandatory=The value of the Title property cannot be null.
VitalSignResultToStringFormatValue=: {0}
VitalSignResultToStringFormatUnit={0}

# VitalSigns.cs
VitalSignsUnexpectedNode=The specified XML does not contain a vital-signs node.
VitalSignsWhenNotSet=The date when the vital signs were taken must be set before creating or updating the item.

# VolumeMeasurement.cs
VolumeNotPositive=The volume measurement must be greater than or equal to zero.

# WeightValue.cs
WeightValueKGNotSet=The weight value must be set before creating or updating the item.
WeightNotPositive=The weight value must be greater than zero.
WeightResultNotPositive=The resulting weight value must be greater than zero.

# Weight.cs
WeightUnexpectedNode=The specified XML does not contain a weight node.
WeightValueMandatory=The value of the Value property cannot be null.
WeightValueNotSet=The weight value must be set before creating or updating the weight item.

# WeightGoal.cs
WeightGoalUnexpectedNode=The specified XML does not contain a weight-goal node.
WeightGoalToStringFormatMin=At least {0}
MeasurementRangeWithDate={0} to {1} by {2}
WeightGoalToStringFormatMinWithDate=At least {0} by {1}
WeightGoalToStringFormatMaxWithDate={0} by {1}

# WildcatDateTime.cs
HealthServiceDateTimeDateNull=The date cannot be null.
DateCompareToInvalidType=A HealthServiceDate object can only be compared with HealthServiceDate and DateTime objects.
TimeCompareToInvalidType=An ApproximateTime object can only be compared with another ApproximateTime object.
ApproximateDateCompareToInvalidType=An ApproximateDate object can only be compared with ApproximateDate and DateTime objects.
ApproximateDateTimeCompareToInvalidType=An ApproximateDateTime object can only be compared with ApproximateDateTime and DateTime objects.

ParseXmlNavNull=The XML navigator must be provided to parse the XML.
WriteXmlNullWriter=The XmlWriter must be specified.
WriteXmlEmptyNodeName=The containing node name must be specified.
TimeMillisecondsOutOfRange=The milliseconds must be between 0 and 999.
TimeSecondsOutOfRange=The seconds must be between 0 and 59.
TimeMinutesOutOfRange=The minute must be between 0 and 59.
TimeHoursOutOfRange=The hour must be between 0 and 23.
DateDayOutOfRange=The day must be between 1 and 31.
DateMonthOutOfRange=The month must be between 1 and 12.
DateYearOutOfRange=The year must be between 1000 and 9999.
WhenNullValue=The value of the When property cannot be null.


# ThingExtension.cs
ItemExtensionSourceNullOrEmpty=The extension source must be specified.
ExtensionSerializationSourceMissing=The extension source must be set before creating or updating a item.

#WildcatVocabulary.cs
VocabularyKeyNullOrEmpty=A valid vocabulary key must be specified.
VocabularyKeysNullOrEmpty=At least one valid vocabulary key must be specified.
VocabularyNameNullOrEmpty=A non-null and non-empty vocabulary name must be specified.
VocabularyFamilyNullOrEmpty=A non-null and non-empty vocabulary family must be specified.
VocabularyVersionNullOrEmpty=A non-null and non-empty vocabulary version must be specified.
VocabularyItemCodeValueNullOrEmpty=A non-null and non-empty vocabulary item code value must be specified.
VocabularySearchStringInvalid=A non-null search string between 1 and 255 characters must be specified.
VocabularySearchTypeUnknown=A valid search type must be specified.
VocabularySearchMaxResultsInvalid=Max results must be a positive integer.

#VocabularyItemDataConverter.cs
VocabularyItemNull=The vocabulary item cannot be null.
VocabularyItemConversionNotSupported=The vocabulary item doesn't support the requested conversion.
VocabularyItemConversionGeneralException=An error occurred during conversion.
VocabularyItemUnsupportedConversion=Encountered unknown or unsupported conversion.

#VocabularyItem.cs
VocabularyItemValueNull=The vocabulary item value (code-value) cannot be null.
VocabularyItemInfoXmlNull=The info xml cannot be null.

# TypeIdSetDefinition.cs
TypeIdSetGuidEmpty=The type identifier must be a non-empty Guid.

# DateRangeSetDefinition.cs
DateRangeMinLessThanMax=The dateMin must be less than or equal to dateMax.

# UserTagSetDefinition.cs
UserTagSetEmpty=At least one valid user tag must be specified.

# AuthorizationRule.cs
AuthorizationRuleBadPermissions=The permissions 'None' and 'Unknown' cannot be specified when constructing an AuthorizationRule.
GetRulesXmlNullRules=A non-null list of authorizations must be specified.

#OtherItemDataCSV.cs
OtherItemDataFormat=The other data ContentType must be text/csv.
OtherItemDataNull=The Data value cannot be null.
OtherItemDataInvalidNumber=string is not a valid floating-point number.
OtherItemDataValuesNull=List of values cannot be null.
OtherItemDataEscapesNull=List of escapes cannot be null.

#OtherITemDataCSVEscape.cs
BeforeIndexNumberNegative=The BeforeIndexNumber value cannot be negative.
CSVNameNull=The name of the escape cannot be null.
CSVNameInvalid=Name cannot contain the '=' character.
CSVValueNull=The value of the escape cannot be null.
CSVValueInvalid=Value cannot contain the '=' character.

# DirectoryFilter.cs
DirectoryFilterIdsNull=The filter ids cannot be set to null or empty.

#VocabularyAuthorization.cs
VocabAuthNavIsNull=The vocabularyAuthorization navigator cannot be null.

#VocabularySearchHelper.cs
VocabularySearchParametersNull=A valid vocabulary search parameters object must be specified.
JSONCallbackNameNullOrEmpty=A valid name of the JSON callback function must be specified.
ServiceTokenEmpty=The service token must be a non empty valid Guid.

#NotificationAuthenticationSharedKeyInfo.cs
KeyIncorrectLength=The key must be 64 bytes in length.
VersionInvalidCharacters=The version can only contain the characters 'a-z', 'A-Z', '0-9', and '-'.

# HealthVaultPlatformAlternateId.cs
AlternateIdConnectionNull=The connection cannot be null.
AccessorNull=The accessor cannot be null.
AlternateIdNull=The alternate ID cannot be null.
AlternateIdTooLong=The alternate ID must be 255 characters or less in length.
